Что в репозитории:
get_archive_and_checksum.ps1 - рабочий скрипт, крутится в Docker
WORKS_LOCAL_get_archive_and_hashes.ps1 - изначальный скрипт, много хардкода, работает только локально
/test/get_archive_and_checksum.Tests.ps1 - рабочие тесты на Powershell Pester
/test/get_archive_and_hashes.Tests.ps1 - изначальные тесты на Powershell Pester, работают только локально
/dev_build - папка с проектами, создал как в ТЗ
/dev_artifacts - эту папку можно использовать как volume, сюда складываются архивы. Не создаётся внутри скрипта, нужна для работы
Makefile, Dockerfile и Test_script_archive_and_hashes.yml для автоматизации в 3 и 4 пунктах ТЗ

Не удалось запустить скрипт на windows, проблемы с настройкой движка докера и WSL
Выполнено:
1) Написал скрипт на PowerShell:
Скрипт написал мягко говоря криво, много хардкода, из-за чего было потом куча проблем, ошибки усвоил, но исправить и нормально переписать не успел. 
Скрипт выполняет поставленные задачи (в той степени как я их понял):
- Сначала вычисляются контрольные суммы всех файлов проекта, объединяются в одну строку, в один файл и от него считается хэш
- После создаётся архив проекта и хэшей
- Затем вычисляются хэши архивов проектов и добавляются в общий архив
2) Тесты Powershell Pester написал не все, ещё можно было бы сверить контрольные суммы, но я написал простые общие (+ один тест, что файл с контрольной суммой не пустой в самом скрипте есть)
Тесты проверяют:
- Что папка dev_artifacts не пустая (в ней лежат итоговые архивы)
- Что архивы имеют размер больше 0
- Что все вспомогательные файлы были удалены скриптом
3+4) C Makefile и Github action возникли проблемы. Собрал докерфайл, у меня он отрабатывает. В Github action тоже вижу, что на ubuntu образ собирается, контейнер отрабатывает, все тесты пройдены,
но работает только на Ubuntu
С запуском на windows всё не очень, не удаётся настроить Docker

Итоги:
Отрабатывает на Ubuntu, не отрабатывает на Windows. Скрипт написан "так себе", тесты написаны не все. 
Dockerfile думаю можно оптимизировать, поискать образ полегче. Если нужен результат скрипта, а не только результат теста скрипта, 
то можно примонтировать volume dev_artifacts

